package game
//kage:unit pixels

var Time float
var Pulse float

func cosPalette(t float, a, b, c, d vec3) vec3 {
	return a + b * cos(6.2831853 * (c*t + d))
}

func palNeon(t float) vec3 {
	return cosPalette(t, vec3(0.5), vec3(0.5), vec3(1), vec3(0.00, 0.33, 0.67))
}

func Fragment(pos vec4, local vec2) vec4 {
    // Normalize [0, 1]
    canvas := imageSrc0Size()
    uv := local / canvas

    // Scroll
    uv.x += sin(Time/2)
    uv.y += cos(Time/3)

    // Pulser ratio correction + center
    d := uv - vec2(0.5, 0.5)
    d.x *= canvas.x / canvas.y

    // Repeat pattern
    d = fract(d * 2) - vec2(0.5, 0.5)

    // Pulse effect
    circColor := vec4(palNeon(
        uv.x / 2 * sin(Time/5) + uv.y / 2 * sin(Time/2),
    ), 1)
    p := Pulse * 0.16 + 0.3

    dist := length(d)
    v := 1.0 - smoothstep(p, p+0.03, dist)

    return mix(vec4(0), circColor, v)
}